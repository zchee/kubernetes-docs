.TH "KUBERNETES" "1" " kubernetes User Manuals" "Eric Paris" "Jan 2015"  ""


.SH NAME
.PP
kubectl taint \- Update the taints on one or more nodes


.SH SYNOPSIS
.PP
\fBkubectl taint\fP [OPTIONS]


.SH DESCRIPTION
.PP
Update the taints on one or more nodes.
.IP \n+[step]

\item A taint consists of a key, value, and effect. As an argument here, it is expressed as key=value:effect.
.br
\item The key must begin with a letter or number, and may contain letters, numbers, hyphens, dots, and underscores, up to  253 characters.
.br
\item Optionally, the key can begin with a DNS subdomain prefix and a single '/', like example.com/my\-app
.br
\item The value must begin with a letter or number, and may contain letters, numbers, hyphens, dots, and underscores, up to  63 characters.
.br
\item The effect must be NoSchedule, PreferNoSchedule or NoExecute.
.br
\item Currently taint can only apply to node.

.SH OPTIONS
.PP
\fB\-\-all\fP=false
    Select all nodes in the cluster

.PP
\fB\-\-allow\-missing\-template\-keys\fP=true
    If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.

.PP
\fB\-o\fP, \fB\-\-output\fP=""
    Output format. One of: json|yaml|name|go\-template\-file|templatefile|template|go\-template|jsonpath|jsonpath\-file.

.PP
\fB\-\-overwrite\fP=false
    If true, allow taints to be overwritten, otherwise reject taint updates that overwrite existing taints.

.PP
\fB\-l\fP, \fB\-\-selector\fP=""
    Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. \-l key1=value1,key2=value2)

.PP
\fB\-\-template\fP=""
    Template string or path to template file to use when \-o=go\-template, \-o=go\-template\-file. The template format is golang templates [
\[la]http://golang.org/pkg/text/template/#pkg-overview\[ra]].

.PP
\fB\-\-validate\fP=true
    If true, use a schema to validate the input before sending it


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-allow\-verification\-with\-non\-compliant\-keys\fP=false
    Allow a SignatureVerifier to use keys which are technically non\-compliant with RFC6962.

.PP
\fB\-\-alsologtostderr\fP=false
    log to standard error as well as files

.PP
\fB\-\-as\fP=""
    Username to impersonate for the operation

.PP
\fB\-\-as\-group\fP=[]
    Group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-azure\-container\-registry\-config\fP=""
    Path to the file containing Azure container registry configuration information.

.PP
\fB\-\-cache\-dir\fP="/Users/zchee/.kube/http\-cache"
    Default HTTP cache directory

.PP
\fB\-\-certificate\-authority\fP=""
    Path to a cert file for the certificate authority

.PP
\fB\-\-client\-certificate\fP=""
    Path to a client certificate file for TLS

.PP
\fB\-\-client\-key\fP=""
    Path to a client key file for TLS

.PP
\fB\-\-cloud\-provider\-gce\-lb\-src\-cidrs\fP=130.211.0.0/22,209.85.152.0/22,209.85.204.0/22,35.191.0.0/16
    CIDRs opened in GCE firewall for LB traffic proxy \& health checks

.PP
\fB\-\-cluster\fP=""
    The name of the kubeconfig cluster to use

.PP
\fB\-\-context\fP=""
    The name of the kubeconfig context to use

.PP
\fB\-\-default\-not\-ready\-toleration\-seconds\fP=300
    Indicates the tolerationSeconds of the toleration for notReady:NoExecute that is added by default to every pod that does not already have such a toleration.

.PP
\fB\-\-default\-unreachable\-toleration\-seconds\fP=300
    Indicates the tolerationSeconds of the toleration for unreachable:NoExecute that is added by default to every pod that does not already have such a toleration.

.PP
\fB\-\-google\-json\-key\fP=""
    The Google Cloud Platform Service Account JSON Key to use for authentication.

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure

.PP
\fB\-\-kubeconfig\fP=""
    Path to the kubeconfig file to use for CLI requests.

.PP
\fB\-\-log\-backtrace\-at\fP=:0
    when logging hits line file:N, emit a stack trace

.PP
\fB\-\-log\-dir\fP=""
    If non\-empty, write log files in this directory

.PP
\fB\-\-log\-flush\-frequency\fP=5s
    Maximum number of seconds between log flushes

.PP
\fB\-\-logtostderr\fP=true
    log to standard error instead of files

.PP
\fB\-\-match\-server\-version\fP=false
    Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
    If present, the namespace scope for this CLI request

.PP
\fB\-\-request\-timeout\fP="0"
    The length of time to wait before giving up on a single server request. Non\-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.

.PP
\fB\-s\fP, \fB\-\-server\fP=""
    The address and port of the Kubernetes API server

.PP
\fB\-\-stderrthreshold\fP=2
    logs at or above this threshold go to stderr

.PP
\fB\-\-token\fP=""
    Bearer token for authentication to the API server

.PP
\fB\-\-user\fP=""
    The name of the kubeconfig user to use

.PP
\fB\-v\fP, \fB\-\-v\fP=0
    log level for V logs

.PP
\fB\-\-version\fP=false
    Print version information and quit

.PP
\fB\-\-vmodule\fP=
    comma\-separated list of pattern=N settings for file\-filtered logging


.SH EXAMPLE
.PP
.RS

.nf
  # Update node 'foo' with a taint with key 'dedicated' and value 'special\-user' and effect 'NoSchedule'.
  # If a taint with that key and effect already exists, its value is replaced as specified.
  kubectl taint nodes foo dedicated=special\-user:NoSchedule
  
  # Remove from node 'foo' the taint with key 'dedicated' and effect 'NoSchedule' if one exists.
  kubectl taint nodes foo dedicated:NoSchedule\-
  
  # Remove from node 'foo' all the taints with key 'dedicated'
  kubectl taint nodes foo dedicated\-
  
  # Add a taint with key 'dedicated' on nodes having label mylabel=X
  kubectl taint node \-l myLabel=X  dedicated=foo:PreferNoSchedule

.fi
.RE


.SH SEE ALSO
.PP
\fBkubectl(1)\fP,


.SH HISTORY
.PP
January 2015, Originally compiled by Eric Paris (eparis at redhat dot com) based on the kubernetes source material, but hopefully they have been automatically generated since!

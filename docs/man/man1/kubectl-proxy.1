.TH "KUBERNETES" "1" " kubernetes User Manuals" "Eric Paris" "Jan 2015"  ""


.SH NAME
.PP
kubectl proxy \- Run a proxy to the Kubernetes API server


.SH SYNOPSIS
.PP
\fBkubectl proxy\fP [OPTIONS]


.SH DESCRIPTION
.PP
Creates a proxy server or application\-level gateway between localhost and the Kubernetes API Server. It also allows serving static content over specified HTTP path. All incoming data enters through one port and gets forwarded to the remote kubernetes API Server port, except for the path matching the static content path.


.SH OPTIONS
.PP
\fB\-\-accept\-hosts\fP="^localhost$,^127\\.0\\.0\\.1$,^\\[::1\\]$"
    Regular expression for hosts that the proxy should accept.

.PP
\fB\-\-accept\-paths\fP="^.*"
    Regular expression for paths that the proxy should accept.

.PP
\fB\-\-address\fP="127.0.0.1"
    The IP address on which to serve on.

.PP
\fB\-\-api\-prefix\fP="/"
    Prefix to serve the proxied API under.

.PP
\fB\-\-disable\-filter\fP=false
    If true, disable request filtering in the proxy. This is dangerous, and can leave you vulnerable to XSRF attacks, when used with an accessible port.

.PP
\fB\-\-keepalive\fP=0s
    keepalive specifies the keep\-alive period for an active network connection. Set to 0 to disable keepalive.

.PP
\fB\-p\fP, \fB\-\-port\fP=8001
    The port on which to run the proxy. Set to 0 to pick a random port.

.PP
\fB\-\-reject\-methods\fP="^$"
    Regular expression for HTTP methods that the proxy should reject (example \-\-reject\-methods='POST,PUT,PATCH').

.PP
\fB\-\-reject\-paths\fP="^/api/.\fI/pods/.\fP/exec,^/api/.\fI/pods/.\fP/attach"
    Regular expression for paths that the proxy should reject. Paths specified here will be rejected even accepted by \-\-accept\-paths.

.PP
\fB\-u\fP, \fB\-\-unix\-socket\fP=""
    Unix socket on which to run the proxy.

.PP
\fB\-w\fP, \fB\-\-www\fP=""
    Also serve static files from the given directory under the specified prefix.

.PP
\fB\-P\fP, \fB\-\-www\-prefix\fP="/static/"
    Prefix to serve static files under, if static file directory is specified.


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-allow\-verification\-with\-non\-compliant\-keys\fP=false
    Allow a SignatureVerifier to use keys which are technically non\-compliant with RFC6962.

.PP
\fB\-\-alsologtostderr\fP=false
    log to standard error as well as files

.PP
\fB\-\-as\fP=""
    Username to impersonate for the operation

.PP
\fB\-\-as\-group\fP=[]
    Group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-azure\-container\-registry\-config\fP=""
    Path to the file containing Azure container registry configuration information.

.PP
\fB\-\-cache\-dir\fP="/Users/zchee/.kube/http\-cache"
    Default HTTP cache directory

.PP
\fB\-\-certificate\-authority\fP=""
    Path to a cert file for the certificate authority

.PP
\fB\-\-client\-certificate\fP=""
    Path to a client certificate file for TLS

.PP
\fB\-\-client\-key\fP=""
    Path to a client key file for TLS

.PP
\fB\-\-cloud\-provider\-gce\-lb\-src\-cidrs\fP=130.211.0.0/22,209.85.152.0/22,209.85.204.0/22,35.191.0.0/16
    CIDRs opened in GCE firewall for LB traffic proxy \& health checks

.PP
\fB\-\-cluster\fP=""
    The name of the kubeconfig cluster to use

.PP
\fB\-\-context\fP=""
    The name of the kubeconfig context to use

.PP
\fB\-\-default\-not\-ready\-toleration\-seconds\fP=300
    Indicates the tolerationSeconds of the toleration for notReady:NoExecute that is added by default to every pod that does not already have such a toleration.

.PP
\fB\-\-default\-unreachable\-toleration\-seconds\fP=300
    Indicates the tolerationSeconds of the toleration for unreachable:NoExecute that is added by default to every pod that does not already have such a toleration.

.PP
\fB\-\-google\-json\-key\fP=""
    The Google Cloud Platform Service Account JSON Key to use for authentication.

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure

.PP
\fB\-\-kubeconfig\fP=""
    Path to the kubeconfig file to use for CLI requests.

.PP
\fB\-\-log\-backtrace\-at\fP=:0
    when logging hits line file:N, emit a stack trace

.PP
\fB\-\-log\-dir\fP=""
    If non\-empty, write log files in this directory

.PP
\fB\-\-log\-flush\-frequency\fP=5s
    Maximum number of seconds between log flushes

.PP
\fB\-\-logtostderr\fP=true
    log to standard error instead of files

.PP
\fB\-\-match\-server\-version\fP=false
    Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
    If present, the namespace scope for this CLI request

.PP
\fB\-\-request\-timeout\fP="0"
    The length of time to wait before giving up on a single server request. Non\-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.

.PP
\fB\-s\fP, \fB\-\-server\fP=""
    The address and port of the Kubernetes API server

.PP
\fB\-\-stderrthreshold\fP=2
    logs at or above this threshold go to stderr

.PP
\fB\-\-token\fP=""
    Bearer token for authentication to the API server

.PP
\fB\-\-user\fP=""
    The name of the kubeconfig user to use

.PP
\fB\-v\fP, \fB\-\-v\fP=0
    log level for V logs

.PP
\fB\-\-version\fP=false
    Print version information and quit

.PP
\fB\-\-vmodule\fP=
    comma\-separated list of pattern=N settings for file\-filtered logging


.SH EXAMPLE
.PP
.RS

.nf
  # To proxy all of the kubernetes api and nothing else, use:
  
  $ kubectl proxy \-\-api\-prefix=/
  
  # To proxy only part of the kubernetes api and also some static files:
  
  $ kubectl proxy \-\-www=/my/files \-\-www\-prefix=/static/ \-\-api\-prefix=/api/
  
  # The above lets you 'curl localhost:8001/api/v1/pods'.
  
  # To proxy the entire kubernetes api at a different root, use:
  
  $ kubectl proxy \-\-api\-prefix=/custom/
  
  # The above lets you 'curl localhost:8001/custom/api/v1/pods'
  
  # Run a proxy to kubernetes apiserver on port 8011, serving static content from ./local/www/
  kubectl proxy \-\-port=8011 \-\-www=./local/www/
  
  # Run a proxy to kubernetes apiserver on an arbitrary local port.
  # The chosen port for the server will be output to stdout.
  kubectl proxy \-\-port=0
  
  # Run a proxy to kubernetes apiserver, changing the api prefix to k8s\-api
  # This makes e.g. the pods api available at localhost:8001/k8s\-api/v1/pods/
  kubectl proxy \-\-api\-prefix=/k8s\-api

.fi
.RE


.SH SEE ALSO
.PP
\fBkubectl(1)\fP,


.SH HISTORY
.PP
January 2015, Originally compiled by Eric Paris (eparis at redhat dot com) based on the kubernetes source material, but hopefully they have been automatically generated since!

name: describe
synopsis: Show details of a specific resource or group of resources
description: "Show details of a specific resource or group of resources \n\nPrint
  a detailed description of the selected resources, including related resources such
  as events or controllers. You may select a single object by name, all objects of
  that type, provide a name prefix, or label selector. For example: \n\n  $ kubectl
  describe TYPE NAME_PREFIX\n  \nwill first check for an exact match on TYPE and NAME
  PREFIX. If no such resource exists, it will output details for every resource that
  has a name prefixed with NAME PREFIX.\n\nUse \"kubectl api-resources\" for a complete
  list of supported resources."
options:
- name: all-namespaces
  default_value: "false"
  usage: |
    If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace.
- name: filename
  shorthand: f
  default_value: '[]'
  usage: |
    Filename, directory, or URL to files containing the resource to describe
- name: include-uninitialized
  default_value: "false"
  usage: |
    If true, the kubectl command applies to uninitialized objects. If explicitly set to false, this flag overrides other flags that make the kubectl commands apply to uninitialized objects, e.g., "--all". Objects with empty metadata.initializers are regarded as initialized.
- name: recursive
  shorthand: R
  default_value: "false"
  usage: |
    Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.
- name: selector
  shorthand: l
  usage: |
    Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)
- name: show-events
  default_value: "true"
  usage: If true, display events related to the described object.
inherited_options:
- name: as
  usage: Username to impersonate for the operation
- name: as-group
  default_value: '[]'
  usage: |
    Group to impersonate for the operation, this flag can be repeated to specify multiple groups.
- name: cache-dir
  default_value: /Users/zchee/.kube/http-cache
  usage: Default HTTP cache directory
- name: certificate-authority
  usage: Path to a cert file for the certificate authority
- name: client-certificate
  usage: Path to a client certificate file for TLS
- name: client-key
  usage: Path to a client key file for TLS
- name: cluster
  usage: The name of the kubeconfig cluster to use
- name: context
  usage: The name of the kubeconfig context to use
- name: insecure-skip-tls-verify
  default_value: "false"
  usage: |
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure
- name: kubeconfig
  usage: Path to the kubeconfig file to use for CLI requests.
- name: match-server-version
  default_value: "false"
  usage: Require server version to match client version
- name: namespace
  shorthand: "n"
  usage: If present, the namespace scope for this CLI request
- name: profile
  default_value: none
  usage: |
    Name of profile to capture. One of (none|cpu|heap|goroutine|threadcreate|block|mutex)
- name: profile-output
  default_value: profile.pprof
  usage: Name of the file to write the profile to
- name: request-timeout
  default_value: "0"
  usage: |
    The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests.
- name: server
  shorthand: s
  usage: The address and port of the Kubernetes API server
- name: token
  usage: Bearer token for authentication to the API server
- name: user
  usage: The name of the kubeconfig user to use
example: "  # Describe a node\n  kubectl describe nodes kubernetes-node-emt8.c.myproject.internal\n
  \ \n  # Describe a pod\n  kubectl describe pods/nginx\n  \n  # Describe a pod identified
  by type and name in \"pod.json\"\n  kubectl describe -f pod.json\n  \n  # Describe
  all pods\n  kubectl describe pods\n  \n  # Describe pods by label name=myLabel\n
  \ kubectl describe po -l name=myLabel\n  \n  # Describe all pods managed by the
  'frontend' replication controller (rc-created pods\n  # get the name of the rc as
  a prefix in the pod the name).\n  kubectl describe pods frontend"
see_also:
- kubectl
